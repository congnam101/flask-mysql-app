pipeline {
    agent any

    options {
        skipDefaultCheckout(true) // Kh√¥ng t·ª± ƒë·ªông checkout t·ª´ SCM
        cleanWs()                 // D·ªçn workspace ƒë·∫ßu m·ªói l·∫ßn build
    }

    environment {
        DOCKER_BUILDKIT = 1       // B·∫≠t buildkit n·∫øu c·∫ßn
    }

    stages {
        stage('Clone Git Repo') {
            steps {
                echo 'üì• Cloning repository...'
                sh '''
                    echo "üîç Tr∆∞·ªõc khi x√≥a:"
                    ls -al || true
                    
                    echo "üßπ X√≥a th∆∞ m·ª•c app n·∫øu t·ªìn t·∫°i..."
                    if [ -d "app" ]; then
                        rm -rf app
                    fi
                    
                    echo "üì• Ti·∫øn h√†nh clone repository..."
                    git clone https://github.com/congnam101/flask-mysql-app.git app
                    
                    echo "‚úÖ Danh s√°ch th∆∞ m·ª•c sau khi clone:"
                    ls -al app
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('app') {
                    echo 'üîß Building Docker image...'
                    sh 'docker build -t flask_mysql_app_web .'
                }
            }
        }

        stage('Stop Existing Containers') {
            steps {
                dir('app') {
                    echo 'üõë Stopping containers (if any)...'
                    sh 'docker-compose down || true'
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                dir('app') {
                    echo 'üöÄ Starting containers...'
                    sh 'docker-compose up -d'
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                echo 'üîç Verifying deployment...'
                sh 'curl -f http://localhost:5000 || echo "‚ö†Ô∏è App may not be ready yet."'
            }
        }
    }

    post {
        success {
            echo '‚úÖ Deployment Successful!'
        }
        failure {
            echo '‚ùå Deployment Failed. Check logs above.'
        }
    }
}
